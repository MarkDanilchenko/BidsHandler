{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "RequestHandler API Documentation (OpenAPIv3)",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000/api/v1",
      "description": "API server"
    }
  ],
  "tags": [
    {
      "name": "Reg&Auth",
      "description": "Registration & authentication end-points"
    },
    {
      "name": "Users' requests",
      "description": "Users' requests end-points"
    },
    {
      "name": "Greeting",
      "description": "API's greeting html-page end-point"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Greeting"
        ],
        "summary": "Greeting HTML-page end-point.",
        "description": "This is a base greeting HTML-page of the API, \twhere you can learn more about it purpose and get links to the documentation and source code on GitHub.com",
        "operationId": "greeting",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "html",
                  "example": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<title>Document</title>\n</head>\n<body>\n\t<h1>Hello, world!</h1>\n</body>\n</html>",
                  "description": "Greeting HTML-page"
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "Reg&Auth"
        ],
        "summary": "Sign up end-point.",
        "description": "This is the end-point for the registration of new users in the system. Both users and admins can use it.",
        "operationId": "signup",
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "413": {
            "description": "Payload Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "example": "any"
                  },
                  "username": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "first_name": {
                    "example": "any"
                  },
                  "last_name": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "Reg&Auth"
        ],
        "summary": "Sign in end-point.",
        "description": "This is the end-point for the signing in of registered users in the system.",
        "operationId": "signin",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/signout": {
      "get": {
        "tags": [
          "Reg&Auth"
        ],
        "summary": "Sign out end-point.",
        "description": "This is the end-point for the signing out of registered users in the system and blacklisting their refresh tokens permanently.",
        "operationId": "signout",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/refresh": {
      "get": {
        "tags": [
          "Reg&Auth"
        ],
        "summary": "Refresh of the access token end-point.",
        "description": "",
        "operationId": "refresh",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth_schema": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "ServerError_schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Internal server error"
          }
        },
        "required": [
          "message"
        ]
      }
    },
    "examples": {
      "ServerError_example": {
        "value": {
          "message": "Internal server error"
        },
        "summary": "The response message of the server error"
      }
    }
  }
}